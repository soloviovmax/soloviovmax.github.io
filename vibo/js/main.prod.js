(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

window.addEventListener('DOMContentLoaded', init);

function init() {
   ankers();
   hamburger();
};

function ankers() {
   var buttons = document.querySelectorAll('.nav__btn');

   buttons.forEach(function (btn) {
      btn.addEventListener('click', function (e) {
         var anker = this.dataset.anker;
         var element = document.getElementById(anker);
         scrollTo(element);
      });
   });
};

function scrollTo(destination) {
   var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;

   var start = window.pageYOffset;
   var startTime = 'now' in window.performance ? performance.now() : new Date().getTime();

   var documentHeight = Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight);
   var windowHeight = window.innerHeight || document.documentElement.clientHeight || document.getElementsByTagName('body')[0].clientHeight;
   var headerHeight = document.querySelector('.header').offsetHeight;
   var destinationOffset = typeof destination === 'number' ? destination : destination.offsetTop - headerHeight;

   if (destinationOffset < 0) {
      destinationOffset = 0;
   }

   var destinationOffsetToScroll = Math.round(documentHeight - destinationOffset < windowHeight ? documentHeight - windowHeight : destinationOffset);

   if ('requestAnimationFrame' in window === false) {
      window.scroll(0, destinationOffsetToScroll);
      return;
   }

   function scroll() {
      var now = 'now' in window.performance ? performance.now() : new Date().getTime();
      var time = Math.min(1, (now - startTime) / duration);
      var timeFunction = time;
      window.scroll(0, Math.ceil(timeFunction * (destinationOffsetToScroll - start) + start));

      if (window.pageYOffset === destinationOffsetToScroll) {
         return;
      }

      requestAnimationFrame(scroll);
   }

   scroll();
};

function hamburger() {
   var btn = document.querySelector('.header__hamburger');
   var menu = document.querySelector('.nav');

   btn.addEventListener('click', function (e) {
      menu.classList.toggle('nav--active');
   });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZha2VfMmU2Y2MwMi5qcyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiaW5pdCIsImFua2VycyIsImhhbWJ1cmdlciIsImJ1dHRvbnMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiYnRuIiwiZSIsImFua2VyIiwiZGF0YXNldCIsImVsZW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInNjcm9sbFRvIiwiZGVzdGluYXRpb24iLCJkdXJhdGlvbiIsInN0YXJ0IiwicGFnZVlPZmZzZXQiLCJzdGFydFRpbWUiLCJwZXJmb3JtYW5jZSIsIm5vdyIsIkRhdGUiLCJnZXRUaW1lIiwiZG9jdW1lbnRIZWlnaHQiLCJNYXRoIiwibWF4IiwiYm9keSIsInNjcm9sbEhlaWdodCIsIm9mZnNldEhlaWdodCIsImRvY3VtZW50RWxlbWVudCIsImNsaWVudEhlaWdodCIsIndpbmRvd0hlaWdodCIsImlubmVySGVpZ2h0IiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJoZWFkZXJIZWlnaHQiLCJxdWVyeVNlbGVjdG9yIiwiZGVzdGluYXRpb25PZmZzZXQiLCJvZmZzZXRUb3AiLCJkZXN0aW5hdGlvbk9mZnNldFRvU2Nyb2xsIiwicm91bmQiLCJzY3JvbGwiLCJ0aW1lIiwibWluIiwidGltZUZ1bmN0aW9uIiwiY2VpbCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1lbnUiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU9DLGdCQUFQLENBQXdCLGtCQUF4QixFQUE0Q0MsSUFBNUM7O0FBRUEsU0FBU0EsSUFBVCxHQUFnQjtBQUNiQztBQUNBQztBQUNGOztBQUVELFNBQVNELE1BQVQsR0FBa0I7QUFDZixPQUFNRSxVQUFVQyxTQUFTQyxnQkFBVCxDQUEwQixXQUExQixDQUFoQjs7QUFFQUYsV0FBUUcsT0FBUixDQUFnQixlQUFPO0FBQ3BCQyxVQUFJUixnQkFBSixDQUFxQixPQUFyQixFQUE4QixVQUFTUyxDQUFULEVBQVk7QUFDdkMsYUFBSUMsUUFBUSxLQUFLQyxPQUFMLENBQWFELEtBQXpCO0FBQ0EsYUFBSUUsVUFBVVAsU0FBU1EsY0FBVCxDQUF3QkgsS0FBeEIsQ0FBZDtBQUNBSSxrQkFBU0YsT0FBVDtBQUNGLE9BSkQ7QUFLRixJQU5EO0FBT0Y7O0FBRUQsU0FBU0UsUUFBVCxDQUFrQkMsV0FBbEIsRUFBK0M7QUFBQSxPQUFoQkMsUUFBZ0IsdUVBQUwsR0FBSzs7QUFDNUMsT0FBTUMsUUFBUWxCLE9BQU9tQixXQUFyQjtBQUNBLE9BQU1DLFlBQVksU0FBU3BCLE9BQU9xQixXQUFoQixHQUE4QkEsWUFBWUMsR0FBWixFQUE5QixHQUFrRCxJQUFJQyxJQUFKLEdBQVdDLE9BQVgsRUFBcEU7O0FBRUEsT0FBTUMsaUJBQWlCQyxLQUFLQyxHQUFMLENBQVNyQixTQUFTc0IsSUFBVCxDQUFjQyxZQUF2QixFQUFxQ3ZCLFNBQVNzQixJQUFULENBQWNFLFlBQW5ELEVBQWlFeEIsU0FBU3lCLGVBQVQsQ0FBeUJDLFlBQTFGLEVBQXdHMUIsU0FBU3lCLGVBQVQsQ0FBeUJGLFlBQWpJLEVBQStJdkIsU0FBU3lCLGVBQVQsQ0FBeUJELFlBQXhLLENBQXZCO0FBQ0EsT0FBTUcsZUFBZWpDLE9BQU9rQyxXQUFQLElBQXNCNUIsU0FBU3lCLGVBQVQsQ0FBeUJDLFlBQS9DLElBQStEMUIsU0FBUzZCLG9CQUFULENBQThCLE1BQTlCLEVBQXNDLENBQXRDLEVBQXlDSCxZQUE3SDtBQUNBLE9BQU1JLGVBQWU5QixTQUFTK0IsYUFBVCxDQUF1QixTQUF2QixFQUFrQ1AsWUFBdkQ7QUFDQSxPQUFJUSxvQkFBb0IsT0FBT3RCLFdBQVAsS0FBdUIsUUFBdkIsR0FBa0NBLFdBQWxDLEdBQWlEQSxZQUFZdUIsU0FBWixHQUF3QkgsWUFBakc7O0FBRUEsT0FBSUUsb0JBQW9CLENBQXhCLEVBQTJCO0FBQ3ZCQSwwQkFBb0IsQ0FBcEI7QUFDSDs7QUFFRCxPQUFNRSw0QkFBNEJkLEtBQUtlLEtBQUwsQ0FBV2hCLGlCQUFpQmEsaUJBQWpCLEdBQXFDTCxZQUFyQyxHQUFvRFIsaUJBQWlCUSxZQUFyRSxHQUFvRkssaUJBQS9GLENBQWxDOztBQUVBLE9BQUksMkJBQTJCdEMsTUFBM0IsS0FBc0MsS0FBMUMsRUFBaUQ7QUFDakRBLGFBQU8wQyxNQUFQLENBQWMsQ0FBZCxFQUFpQkYseUJBQWpCO0FBQ0E7QUFDRjs7QUFFRCxZQUFTRSxNQUFULEdBQWtCO0FBQ2YsVUFBTXBCLE1BQU0sU0FBU3RCLE9BQU9xQixXQUFoQixHQUE4QkEsWUFBWUMsR0FBWixFQUE5QixHQUFrRCxJQUFJQyxJQUFKLEdBQVdDLE9BQVgsRUFBOUQ7QUFDQSxVQUFNbUIsT0FBT2pCLEtBQUtrQixHQUFMLENBQVMsQ0FBVCxFQUFhLENBQUN0QixNQUFNRixTQUFQLElBQW9CSCxRQUFqQyxDQUFiO0FBQ0EsVUFBTTRCLGVBQWVGLElBQXJCO0FBQ0EzQyxhQUFPMEMsTUFBUCxDQUFjLENBQWQsRUFBaUJoQixLQUFLb0IsSUFBTCxDQUFXRCxnQkFBZ0JMLDRCQUE0QnRCLEtBQTVDLENBQUQsR0FBdURBLEtBQWpFLENBQWpCOztBQUVBLFVBQUlsQixPQUFPbUIsV0FBUCxLQUF1QnFCLHlCQUEzQixFQUFzRDtBQUNuRDtBQUNGOztBQUVFTyw0QkFBc0JMLE1BQXRCO0FBQ0Y7O0FBRURBO0FBQ0Y7O0FBRUQsU0FBU3RDLFNBQVQsR0FBcUI7QUFDbEIsT0FBTUssTUFBTUgsU0FBUytCLGFBQVQsQ0FBdUIsb0JBQXZCLENBQVo7QUFDQSxPQUFNVyxPQUFPMUMsU0FBUytCLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBYjs7QUFFQTVCLE9BQUlSLGdCQUFKLENBQXFCLE9BQXJCLEVBQThCLFVBQVNTLENBQVQsRUFBWTtBQUN2Q3NDLFdBQUtDLFNBQUwsQ0FBZUMsTUFBZixDQUFzQixhQUF0QjtBQUNGLElBRkQ7QUFHRiIsImZpbGUiOiJmYWtlXzJlNmNjMDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGluaXQpO1xyXG5cclxuZnVuY3Rpb24gaW5pdCgpIHtcclxuICAgYW5rZXJzKCk7XHJcbiAgIGhhbWJ1cmdlcigpO1xyXG59O1xyXG5cclxuZnVuY3Rpb24gYW5rZXJzKCkge1xyXG4gICBjb25zdCBidXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm5hdl9fYnRuJyk7XHJcblxyXG4gICBidXR0b25zLmZvckVhY2goYnRuID0+IHtcclxuICAgICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICBsZXQgYW5rZXIgPSB0aGlzLmRhdGFzZXQuYW5rZXI7XHJcbiAgICAgICAgIGxldCBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYW5rZXIpO1xyXG4gICAgICAgICBzY3JvbGxUbyhlbGVtZW50KTsgICAgXHJcbiAgICAgIH0pO1xyXG4gICB9KTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIHNjcm9sbFRvKGRlc3RpbmF0aW9uLCBkdXJhdGlvbiA9IDUwMCkge1xyXG4gICBjb25zdCBzdGFydCA9IHdpbmRvdy5wYWdlWU9mZnNldDtcclxuICAgY29uc3Qgc3RhcnRUaW1lID0gJ25vdycgaW4gd2luZG93LnBlcmZvcm1hbmNlID8gcGVyZm9ybWFuY2Uubm93KCkgOiBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuXHJcbiAgIGNvbnN0IGRvY3VtZW50SGVpZ2h0ID0gTWF0aC5tYXgoZG9jdW1lbnQuYm9keS5zY3JvbGxIZWlnaHQsIGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0LCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0LCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQub2Zmc2V0SGVpZ2h0KTtcclxuICAgY29uc3Qgd2luZG93SGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQgfHwgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXS5jbGllbnRIZWlnaHQ7XHJcbiAgIGNvbnN0IGhlYWRlckhlaWdodCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXInKS5vZmZzZXRIZWlnaHQ7XHJcbiAgIGxldCBkZXN0aW5hdGlvbk9mZnNldCA9IHR5cGVvZiBkZXN0aW5hdGlvbiA9PT0gJ251bWJlcicgPyBkZXN0aW5hdGlvbiA6IChkZXN0aW5hdGlvbi5vZmZzZXRUb3AgLSBoZWFkZXJIZWlnaHQpO1xyXG5cclxuICAgaWYgKGRlc3RpbmF0aW9uT2Zmc2V0IDwgMCkge1xyXG4gICAgICAgZGVzdGluYXRpb25PZmZzZXQgPSAwO1xyXG4gICB9XHJcblxyXG7CoMKgwqBjb25zdCBkZXN0aW5hdGlvbk9mZnNldFRvU2Nyb2xsID0gTWF0aC5yb3VuZChkb2N1bWVudEhlaWdodCAtIGRlc3RpbmF0aW9uT2Zmc2V0IDwgd2luZG93SGVpZ2h0ID8gZG9jdW1lbnRIZWlnaHQgLSB3aW5kb3dIZWlnaHQgOiBkZXN0aW5hdGlvbk9mZnNldCk7XHJcbsKgXHJcbsKgwqDCoGlmICgncmVxdWVzdEFuaW1hdGlvbkZyYW1lJyBpbiB3aW5kb3cgPT09IGZhbHNlKSB7XHJcbsKgwqDCoHdpbmRvdy5zY3JvbGwoMCwgZGVzdGluYXRpb25PZmZzZXRUb1Njcm9sbCk7XHJcbsKgwqDCoHJldHVybjtcclxufVxyXG7CoFxyXG5mdW5jdGlvbiBzY3JvbGwoKSB7XHJcbiAgIGNvbnN0IG5vdyA9ICdub3cnIGluIHdpbmRvdy5wZXJmb3JtYW5jZSA/IHBlcmZvcm1hbmNlLm5vdygpIDogbmV3IERhdGUoKS5nZXRUaW1lKCk7XHJcbiAgIGNvbnN0IHRpbWUgPSBNYXRoLm1pbigxLCAoKG5vdyAtIHN0YXJ0VGltZSkgLyBkdXJhdGlvbikpO1xyXG4gICBjb25zdCB0aW1lRnVuY3Rpb24gPSB0aW1lO1xyXG4gICB3aW5kb3cuc2Nyb2xsKDAsIE1hdGguY2VpbCgodGltZUZ1bmN0aW9uICogKGRlc3RpbmF0aW9uT2Zmc2V0VG9TY3JvbGwgLSBzdGFydCkpICsgc3RhcnQpKTtcclxuXHJcbiAgIGlmICh3aW5kb3cucGFnZVlPZmZzZXQgPT09IGRlc3RpbmF0aW9uT2Zmc2V0VG9TY3JvbGwpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICB9XHJcbiAgIMKgXHJcbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShzY3JvbGwpO1xyXG4gICB9XHJcbiAgIMKgXHJcbiAgIHNjcm9sbCgpO1xyXG59O1xyXG5cclxuZnVuY3Rpb24gaGFtYnVyZ2VyKCkge1xyXG4gICBjb25zdCBidG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyX19oYW1idXJnZXInKTtcclxuICAgY29uc3QgbWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uYXYnKTtcclxuXHJcbiAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgbWVudS5jbGFzc0xpc3QudG9nZ2xlKCduYXYtLWFjdGl2ZScpO1xyXG4gICB9KTtcclxufSJdfQ==
},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
